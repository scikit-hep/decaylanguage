name: CI

on:
  pull_request:
  push:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: --all-files --hook-stage manual
    - name: PyLint
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run nox -s pylint


  checks:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.10', '3.11']
        include:
          - {os: macos-latest, python-version: '3.9'}
          - {os: windows-latest, python-version: '3.7'}
          - {os: windows-latest, python-version: '3.9'}
    name: Check ${{ matrix.os }} Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: python -m pip install -e .[test]

    - name: Pytest
      if: runner.os == 'Linux'
      run: python -m pip install pytest-github-actions-annotate-failures

    - name: Test package
      run: python -m pytest ./tests --cov=src/decaylanguage --cov-report=xml

    - name: Test coverage with Codecov
      if: "runner.os != 'Windows' && matrix.python-version != 3.7"
      uses: codecov/codecov-action@v3

    - name: Test docstrings with doctest
      if: "runner.os == 'Linux' && matrix.python-version == 3.11"
      run: python -m pytest --doctest-modules src/decaylanguage

  notebooks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install package
      run: python -m pip install -e .[test]

    - name: Install notebook requirements
      run: python -m pip install nbconvert jupyter_client ipykernel

    - name: Install dot
      run: sudo apt-get install graphviz

    - name: Install pydot
      run: python -m pip install pydot

    - name: Run the notebooks inplace
      run: jupyter nbconvert --execute --inplace notebooks/DecayLanguageDemo.ipynb notebooks/ExampleDecFileParsingWithLark.ipynb
